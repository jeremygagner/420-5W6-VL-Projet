// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _420_5W6_VL_Projet.Models;

#nullable disable

namespace _420_5W6_VL_Projet.Migrations
{
    [DbContext(typeof(ReeditContext))]
    [Migration("20221101200150_populated_links")]
    partial class populated_links
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Comment", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Lid")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Cid");

                    b.HasIndex("Lid");

                    b.HasIndex("Uid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Link", b =>
                {
                    b.Property<int>("Lid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Lid");

                    b.HasIndex("Uid");

                    b.ToTable("Link");

                    b.HasData(
                        new
                        {
                            Lid = 1,
                            Date = new DateTime(2022, 11, 1, 16, 1, 50, 749, DateTimeKind.Local).AddTicks(3133),
                            Description = "The Lord of the Rings, The Fellowship of the Ring",
                            Uid = 1,
                            Url = "https://upload.wikimedia.org/wikipedia/en/8/8a/The_Lord_of_the_Rings_The_Fellowship_of_the_Ring_%282001%29.jpg"
                        },
                        new
                        {
                            Lid = 2,
                            Date = new DateTime(2022, 11, 1, 16, 1, 50, 749, DateTimeKind.Local).AddTicks(3167),
                            Description = "The Lord of the Rings, The Two Towers",
                            Uid = 1,
                            Url = "https://upload.wikimedia.org/wikipedia/en/d/d0/Lord_of_the_Rings_-_The_Two_Towers_%282002%29.jpg"
                        },
                        new
                        {
                            Lid = 3,
                            Date = new DateTime(2022, 11, 1, 16, 1, 50, 749, DateTimeKind.Local).AddTicks(3169),
                            Description = "The Lord of the Rings, The Return of the King",
                            Uid = 1,
                            Url = "https://upload.wikimedia.org/wikipedia/en/b/be/The_Lord_of_the_Rings_-_The_Return_of_the_King_%282003%29.jpg"
                        },
                        new
                        {
                            Lid = 4,
                            Date = new DateTime(2022, 11, 1, 16, 1, 50, 749, DateTimeKind.Local).AddTicks(3171),
                            Description = "The Hobbit, An Unexpected Journey",
                            Uid = 1,
                            Url = "https://upload.wikimedia.org/wikipedia/en/b/b3/The_Hobbit-_An_Unexpected_Journey.jpeg"
                        },
                        new
                        {
                            Lid = 5,
                            Date = new DateTime(2022, 11, 1, 16, 1, 50, 749, DateTimeKind.Local).AddTicks(3173),
                            Description = "The Hobbit, The Desolation of Smaug",
                            Uid = 1,
                            Url = "https://upload.wikimedia.org/wikipedia/en/4/4f/The_Hobbit_-_The_Desolation_of_Smaug_theatrical_poster.jpg"
                        },
                        new
                        {
                            Lid = 6,
                            Date = new DateTime(2022, 11, 1, 16, 1, 50, 749, DateTimeKind.Local).AddTicks(3175),
                            Description = "The Hobbit, The Battle of the Five Armies",
                            Uid = 1,
                            Url = "https://upload.wikimedia.org/wikipedia/en/e/e7/The_Hobbit_-_The_Battle_of_the_Five_Armies.png"
                        });
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.User", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Uid");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Uid = 1,
                            Email = "projetadmin@gmail.com",
                            Password = "Admin123!",
                            Username = "projet_admin"
                        },
                        new
                        {
                            Uid = 2,
                            Email = "projetuser@gmail.com",
                            Password = "User123!",
                            Username = "projet_user"
                        });
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Vote", b =>
                {
                    b.Property<int>("Vid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Lid")
                        .HasColumnType("int");

                    b.Property<int?>("LinkLid")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<int?>("UserUid")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Vid");

                    b.HasIndex("LinkLid");

                    b.HasIndex("UserUid");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Comment", b =>
                {
                    b.HasOne("_420_5W6_VL_Projet.Models.Entities.Link", "Link")
                        .WithMany("Comments")
                        .HasForeignKey("Lid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420_5W6_VL_Projet.Models.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Link", b =>
                {
                    b.HasOne("_420_5W6_VL_Projet.Models.Entities.User", "User")
                        .WithMany("Links")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Vote", b =>
                {
                    b.HasOne("_420_5W6_VL_Projet.Models.Entities.Link", null)
                        .WithMany("Votes")
                        .HasForeignKey("LinkLid");

                    b.HasOne("_420_5W6_VL_Projet.Models.Entities.User", null)
                        .WithMany("Votes")
                        .HasForeignKey("UserUid");
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.Link", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("_420_5W6_VL_Projet.Models.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Links");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
